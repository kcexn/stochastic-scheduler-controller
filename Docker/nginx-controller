FROM debian:stable-slim

WORKDIR /root
RUN apt-get update && apt-get install -y nginx curl coreutils procps lua5.4

# lua5.4-dev

# Set up the lua environment
ENV __OW_ACTIONS=/var/controller/action-runtimes/lua/functions \
    __OW_ACTION_LAUNCHER=/var/controller/action-runtimes/lua/launcher/launcher.lua \
    LUA_PATH=/var/controller/action-runtimes/lua/functions/?.lua;/var/controller/action-runtimes/lua/lib/?.lua;; \
    LUA_CPATH=/var/controller/action-runtimes/lua/functions/?.so;/var/controller/action-runtimes/lua/lib/?.so;; \
    __OW_ACTION_EXT=lua \
    __OW_ACTION_BIN=/usr/bin/lua
    
COPY action-runtimes/lua/ /var/controller/action-runtimes/lua/

#Setup the python environment
# RUN mkdir -p /var/controller/action-runtimes/python3/functions
# ENV __OW_ACTIONS /var/controller/action-runtimes/python3/functions

# RUN mkdir -p /var/controller/action-runtimes/python3/launcher
# ENV __OW_ACTION_LAUNCHER /var/controller/action-runtimes/python3/launcher/launcher.py
# COPY action-runtimes/python3/launcher/launcher.py /var/controller/action-runtimes/python3/launcher/

# Install Nginx
RUN mkdir -p /var/log/nginx/ &&\
    mkdir -p /run/nginx/ && \
    mkdir -p /etc/nginx/
COPY nginx/nginx.conf /etc/nginx/

# Install the Controller
RUN mkdir -p /usr/local/lib/ && \
    mkdir -p /usr/local/bin/ && \
    mkdir -p /run/controller
COPY lib/ /usr/local/lib/
ENV LD_LIBRARY_PATH=/usr/local/lib
COPY controller/bin/controller /usr/local/bin/

# Install init script
COPY Docker/init.sh /usr/local/bin/

# Install some test data.
COPY tests/ /root/tests/

EXPOSE 8080
ENTRYPOINT ["/bin/bash", "/usr/local/bin/init.sh"]